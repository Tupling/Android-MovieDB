package com.daletupling.movies;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.Fragment;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;
import android.widget.AdapterView.OnItemClickListener;

@SuppressLint("NewApi")
public class MainActivityFragment extends Fragment {

	EditText search;
	Button filter_button, search_button, refresh_button;
	ListView movie_list;
	TextView previous_text, previous_movie;
	List<Map<String, String>> movieListMap;

	SimpleAdapter listA;

	private MovieListener m_listener;

	public interface MovieListener {
		public void findMovies(String string);

		public void movieSearch(String string);

		public void filterMovies();

		public void movieSelected(int position);

		public void closeKeyboard();

		public void landMovieSelected(Intent intent, int position);
	}

	public void onAttach(Activity activity) {
		super.onAttach(activity);
		try {
			m_listener = (MovieListener) activity;
		} catch (ClassCastException e) {
			// TODO Auto-generated catch block
			throw new ClassCastException(activity.toString());

		}
	}

	@SuppressWarnings("unchecked")
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		super.onCreateView(inflater, container, savedInstanceState);

		LinearLayout view = (LinearLayout) inflater.inflate(
				R.layout.linear_layout, container, false);

		previous_text = (TextView) view.findViewById(R.id.previous_viewed);
		previous_text.setVisibility(View.GONE);

		previous_movie = (TextView) view.findViewById(R.id.previous_movie);
		previous_movie.setVisibility(View.GONE);

		// Search Button
		search_button = (Button) view.findViewById(R.id.search_button);
		search_button.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				search = (EditText) getActivity().findViewById(
						R.id.search_input);
				String search_string = search.getText().toString();
				m_listener.closeKeyboard();
				search.setText("");
				search.setHint(R.string.filter_hint);
				m_listener.findMovies(search_string);

			}// onClick closing bracket

		});// SEARCH BUTTON onClickListener closing bracket

		// Filter button
		filter_button = (Button) view.findViewById(R.id.filter_button);
		// disable filter button
		filter_button.setVisibility(View.GONE);
		filter_button.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				m_listener.filterMovies();
			}
		});// FILTER BUTTON on clickListener closing bracket

		// Refresh Button
		refresh_button = (Button) view.findViewById(R.id.refresh_previous);
		refresh_button.setVisibility(View.GONE);
		refresh_button.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				search = (EditText) getActivity().findViewById(
						R.id.search_input);

				refresh_button.setVisibility(View.GONE);
				// filter_button.setVisibility(View.VISIBLE);
				search.setText("");
				search.setHint(R.string.filter_hint);
				m_listener.movieSearch(search.toString());
			}
		});// refresh button closing bracket

		search = (EditText) view.findViewById(R.id.search_input);
		movie_list = (ListView) view.findViewById(R.id.movie_list);
		movieListMap = new ArrayList<Map<String, String>>();
		if (savedInstanceState != null) {
			movieListMap = (ArrayList<Map<String, String>>) savedInstanceState
					.getSerializable("list_saved");
			if (movieListMap != null) {
				listA = new SimpleAdapter(getActivity(), movieListMap,
						R.layout.list_layout,
						new String[] { "title", "release" }, new int[] {
								R.id.title_text, R.id.release_text });
				// Set ListAdapter to previous created listA
				movie_list.setAdapter(listA);
			} else {
				Log.d("MAIN", "Saved=null");
			}
		} else {
			Log.d("MAIN", "no Saved Instance");
		}
		movie_list.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				HashMap<String, String> passedMap = (HashMap<String, String>) movie_list
						.getItemAtPosition(position);

				Intent i = new Intent(getActivity(), MovieDetailsActivity.class);
				Bundle bundle = new Bundle();
				bundle.putString("selectedMovie", passedMap.get("title"));
				bundle.putString("selectedRelease", passedMap.get("release"));
				bundle.putString("posterPath", passedMap.get("poster"));
				bundle.putString("voteCount", passedMap.get("votes"));
				bundle.putString("voteAvg", passedMap.get("vote_avg"));
				i.putExtras(bundle);
				startActivityForResult(i, position);
				m_listener.landMovieSelected(i, position);
			}

		});// movie list on click listener closing bracket
		return view;
	};
	

}